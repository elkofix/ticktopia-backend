name: Docker Build & Push

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "PORT=3000" >> .env
          echo "STRIPE_SECRET_KEY='${{ secrets.STRIPE_SECRET_KEY }}'" >> .env
          echo "STRIPE_SIGNATURE='${{ secrets.STRIPE_SIGNATURE }}'" >> .env
          echo "BASE_URL=https://back.ticktopia.shop/api" >> .env
          echo "FRONTEND_URL=https://www.ticktopia.shop" >> .env
          echo "AZURE_CLIENT_ID='${{ secrets.AZURE_CLIENT_ID }}'" >> .env
          echo "AZURE_CLIENT_SECRET='${{ secrets.AZURE_CLIENT_SECRET }}'" >> .env
          echo "AZURE_TENANT_ID='${{ secrets.AZURE_TENANT_ID }}'" >> .env
          echo "AZURE_SUBSCRIPTION_ID='${{ secrets.AZURE_SUBSCRIPTION_ID }}'" >> .env
          echo "DEPLOYMENT_PHASE=production" >> .env


      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: elkofix
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build Docker Image
        run: |
          docker build -t elkofix/ticktopia:latest .

      - name: Push Docker Image
        run: |
          docker push elkofix/ticktopia:latest

      - name: Crear archivo .pem desde secreto
        run: |
          echo "${{ secrets.PEM }}" > backend-ticktopia.pem
          chmod 400 backend-ticktopia.pem

      - name: Delete docker container and update image
        run: |
          chmod 400 ./backend-ticktopia.pem

          ssh -o StrictHostKeyChecking=no -i ./backend-ticktopia.pem ubuntu@54.209.246.34 << 'EOF'
          #!/bin/bash
          set -e
          docker pull elkofix/ticktopia:latest
          docker stop ticktopia-backend
          docker rm ticktopia-backend
          docker image prune -f
          docker rmi elkofix/ticktopia:latest || true
          docker run -d -p 1337:3000 --name ticktopia-backend elkofix/ticktopia:latest
